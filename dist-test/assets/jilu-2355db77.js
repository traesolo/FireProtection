import { u as ge, r as u, c as he, o as fe, a as we, e as y, f as D, h as t, t as Te, k as r, w as T, i as o, F as Le, j as be, y as Ie, z as Se, E as f, m as Ae, A as Ne, p as _, v as $, q as F, B as Ve, C as d, s as Ue, x as V } from "./index-96379a24.js"; import { _ as Ee, a as ye, b as De, r as p, A as m, u as Pe, p as Re, d as qe } from "./_plugin-vue_export-helper-1fd015bf.js"; const Ce = "" + new URL("../static/index/fanhui.png", import.meta.url).href; const Me = { class: "home" }, Oe = { class: "header" }, xe = { class: "datetime" }, _e = { class: "footer" }, $e = { class: "search" }, Fe = { class: "tables" }, ke = { class: "page" }, We = { class: "login-content" }, Be = { class: "input-section" }, ze = { class: "input-group account-input" }, Ge = { class: "input-icon" }, je = ["src"], He = { class: "input-group" }, Ye = { class: "input-icon" }, Ke = ["src"], Ze = { class: "settings-container" }, Je = { class: "settings-content" }, Qe = { class: "form-item" }, Xe = { class: "form-item" }, el = { class: "form-item" }, ll = { class: "form-item" }, sl = { class: "form-item" }, tl = { class: "form-item" }, al = { class: "form-item" }, ol = { class: "form-item" }, rl = { class: "form-item" }, nl = { class: "form-item" }, il = { class: "upload-demo" }, ul = { key: 0, class: "upload-button" }, dl = { key: 1, class: "uploaded-image-preview" }, ml = ["src"], vl = { class: "form-item" }, pl = { __name: "jilu", setup(cl) { const k = ge(), W = () => { k.push("/") }, R = u(""), w = u("全部"), c = u(1), L = u(8), U = u(0), b = u([]), g = u([]), B = he(() => { const l = (c.value - 1) * L.value, e = l + L.value; return g.value.slice(l, e).map((s, i) => ({ id: String(l + i + 1).padStart(2, "0"), name: s.name || "", status: j(s.status, s.name), alarmLevel: G(s.status), productTime: q(s.alarmStartTime), endTime: q(s.alarmEndTime), alarmDate: z(s.alarmDate) })) }), q = l => { if (!l) return ""; const e = new Date(l), s = e.getFullYear(), i = String(e.getMonth() + 1).padStart(2, "0"), h = String(e.getDate()).padStart(2, "0"), A = String(e.getHours()).padStart(2, "0"), N = String(e.getMinutes()).padStart(2, "0"); return `${s}-${i}-${h} ${A}:${N}` }, z = l => { if (!l) return ""; const e = new Date(l), s = e.getFullYear(), i = String(e.getMonth() + 1).padStart(2, "0"), h = String(e.getDate()).padStart(2, "0"); return `${s}-${i}-${h}` }, G = l => { switch (l) { case "NORMAL": return "正常"; case "IN_USE": case "WARNING": return "预警"; case "ALARM": return "报警"; default: return "正常" } }, j = (l, e) => { const s = e && e.includes("消防水带"), i = e && e.includes("灭火器"), h = e && e.includes("泡沫喷枪"), A = e && e.includes("箱体门"), N = e && e.includes("泡沫液位"), pe = e && e.includes("水压监测"), ce = e && e.includes("消防水枪"); if (A) switch (l) { case "NORMAL": return "关闭"; case "IN_USE": case "WARNING": case "ALARM": return "敞开"; default: return "关闭" }if (N) switch (l) { case "NORMAL": case "IN_USE": return "高液位"; case "WARNING": return "中液位"; case "ALARM": return "低液位"; default: return "高液位" }if (i || ce || s) switch (l) { case "NORMAL": return "在位"; case "IN_USE": case "WARNING": return "离位"; case "ALARM": return "缺失"; default: return "在位" }if (h) switch (l) { case "NORMAL": return "关闭"; case "IN_USE": case "WARNING": case "ALARM": return "开"; default: return "关闭" }if (pe) switch (l) { case "NORMAL": case "IN_USE": return "较高"; case "WARNING": case "ALARM": return "较低"; default: return "较高" }return "" }, C = () => { const l = new Date, e = l.getFullYear(), s = String(l.getMonth() + 1).padStart(2, "0"), i = String(l.getDate()).padStart(2, "0"), h = String(l.getHours()).padStart(2, "0"), A = String(l.getMinutes()).padStart(2, "0"), N = String(l.getSeconds()).padStart(2, "0"); R.value = `${e}.${s}.${i} ${h}:${A}:${N}` }, M = async () => { try { const e = (await p.get(m.ENDPOINTS.MONITOR_STATUS)).data || { devices: [], alarms: [] }; b.value = e.alarms || [], g.value = [...b.value], U.value = g.value.length } catch (l) { console.error("获取告警数据失败:", l), b.value = [], g.value = [], U.value = 0 } }, H = () => { if (w.value === "全部" || w.value === "1") g.value = [...b.value]; else { const l = O.find(e => e.value === w.value); l && (g.value = b.value.filter(e => e.deviceName && e.deviceName.includes(l.label.replace(/\d+$/, "")))) } U.value = g.value.length, c.value = 1 }, Y = () => { w.value = "全部", c.value = 1, M() }, K = l => { L.value = l, c.value = 1 }, Z = l => { c.value = l }, O = [{ value: "1", label: "全部" }, { value: "2", label: "箱体门" }, { value: "3", label: "泡沫液位" }, { value: "4", label: "泡沫喷枪" }, { value: "5", label: "灭火器" }, { value: "6", label: "消防水枪" }, { value: "7", label: "消防水带" }, { value: "8", label: "水压监测" }]; let P = null; fe(() => { C(), P = setInterval(C, 1e3), M() }); const I = u(!1), E = u(!1), n = u({ username: "", password: "", action: "settings" }), a = u({ stationNumber: "", waterPressureThreshold: "", highLiquidLevelThreshold: "", midLiquidLevelThreshold: "", lowLiquidLevelThreshold: "", warningTimeThreshold: "", time: "", name: "", registerAddress: "", deviceName: "", uploadedImage: "", uploadedImageUrl: "" }), S = u(""), J = async () => { try { const l = await p.get(m.ENDPOINTS.THRESHOLDS); l.data && (a.value = { ...a.value, waterPressureThreshold: l.data.waterPressureThreshold || "", highLiquidLevelThreshold: l.data.highLiquidLevelThreshold || "", midLiquidLevelThreshold: l.data.midLiquidLevelThreshold || "", lowLiquidLevelThreshold: l.data.lowLiquidLevelThreshold || "", warningTimeThreshold: l.data.warningTimeThreshold || "", time: l.data.time || "", name: l.data.name || "" }) } catch (l) { console.error("获取设备参数失败:", l) } }, Q = async () => { try { const l = await p.get(m.ENDPOINTS.STATION); l.data && (a.value.stationNumber = l.data.stationNumber || "") } catch (l) { console.error("获取设备号失败:", l) } }, X = async () => { try { const l = await p.get(m.ENDPOINTS.CUSTOM_DEVICE_INFO); if (l.data) { const e = l.data.icon || ""; let s = e; if (e) { const i = {}.VITE_API_BASE_URL || "http://127.0.0.1:8061"; s = e.startsWith("http") ? e : `${i}${e}` } a.value = { ...a.value, deviceName: l.data.name || "", registerAddress: l.data.registerAddress || "", uploadedImage: e, uploadedImageUrl: s }, S.value = e } } catch (l) { console.error("获取自定义设备信息失败:", l) } }, ee = async () => { try { const l = { waterPressureThreshold: parseFloat(a.value.waterPressureThreshold) || 0, highLiquidLevelThreshold: parseFloat(a.value.highLiquidLevelThreshold) || 0, midLiquidLevelThreshold: parseFloat(a.value.midLiquidLevelThreshold) || 0, lowLiquidLevelThreshold: parseFloat(a.value.lowLiquidLevelThreshold) || 0, warningTimeThreshold: parseFloat(a.value.warningTimeThreshold) || 0, time: parseInt(a.value.time) || 0, name: String(a.value.name || "") }; await p.put(m.ENDPOINTS.THRESHOLDS, l) } catch (l) { console.error("保存设备参数失败:", l) } }, le = async () => { try { const l = new Map; l.set("stationNumber", parseInt(a.value.stationNumber) || 1); const e = Object.fromEntries(l); await p.post(m.ENDPOINTS.STATION, e) } catch (l) { console.error("保存设备号失败:", l) } }, se = async () => { try { const l = { id: "", name: a.value.deviceName || "", registerAddress: parseInt(a.value.registerAddress) || 0, icon: S.value || "" }; await p.post(m.ENDPOINTS.CUSTOM_DEVICE_SAVE, l) } catch (l) { console.error("保存自定义设备信息失败:", l) } }, te = async (l, e) => { try { const s = qe(m.ENDPOINTS.PASSWORD_CHECK, { uname: l, pwd: e }); return (await p.get(s)).data === !0 } catch (s) { return console.error("密码验证失败:", s), !1 } }, ae = async () => { await Promise.all([ee(), le(), se()]), E.value = !1 }, oe = () => { n.value.action = "settings", n.value.username = "", n.value.password = "", I.value = !0 }, re = () => { n.value.action = "exit", n.value.username = "", n.value.password = "", I.value = !0 }, ne = async () => { if (!await te(n.value.username, n.value.password)) { V.error("账号或密码错误，请重新输入"); return } I.value = !1, n.value.action === "exit" ? window.electronAPI && window.electronAPI.exitApp ? window.electronAPI.exitApp() : window.close() : (await Promise.all([J(), Q(), X()]), E.value = !0) }, ie = () => { n.value.username = "", n.value.password = "" }, ue = () => { a.value = { stationNumber: "", waterPressureThreshold: "", highLiquidLevelThreshold: "", midLiquidLevelThreshold: "", lowLiquidLevelThreshold: "", warningTimeThreshold: "", time: "", name: "", registerAddress: "", deviceName: "", uploadedImage: "", uploadedImageUrl: "" }, S.value = "" }, v = l => { const e = l.target.value; /^\d*\.?\d*$/.test(e) || (l.target.value = e.slice(0, -1)) }, x = l => { const e = l.target.value; /^[\u4e00-\u9fa5a-zA-Z0-9\s_-]*$/.test(e) || (l.target.value = e.slice(0, -1)) }, de = l => { const e = l.type.startsWith("image/"), s = l.size / 1024 / 1024 < 2; return e ? s ? !0 : (V.error("上传图片大小不能超过 2MB!"), !1) : (V.error("只能上传图片文件!"), !1) }, me = (l, e) => { if (l && l.path) { a.value.uploadedImage = l.path; { const s = {}.VITE_API_BASE_URL || "http://127.0.0.1:8061"; a.value.uploadedImageUrl = l.path.startsWith("http") ? l.path : `${s}${l.path}` } S.value = `${m.BASE_URL}${l.path}` } else a.value.uploadedImage = e.name, a.value.uploadedImageUrl = URL.createObjectURL(e.raw), S.value = ""; V.success("图片上传成功!") }, ve = l => { V.error("图片上传失败，请重试!"), console.error("Upload error:", l) }; return we(() => { P && clearInterval(P) }), (l, e) => (y(), D("div", Me, [t("div", Oe, [t("div", xe, Te(R.value), 1), e[28] || (e[28] = t("div", { class: "title" }, "告警历史记录", -1)), t("div", { class: "controls" }, [t("div", { class: "control-item", onClick: oe }, e[26] || (e[26] = [t("img", { src: ye, alt: "设置", class: "control-icon" }, null, -1), t("span", null, "设置", -1)])), t("div", { class: "control-item", onClick: re }, e[27] || (e[27] = [t("img", { src: De, alt: "退出", class: "control-icon" }, null, -1), t("span", null, "退出", -1)]))])]), t("div", { class: "toback", onClick: W }, e[29] || (e[29] = [t("div", { class: "imgclick" }, [t("img", { src: Ce, alt: "" })], -1), t("div", { class: "fanhui" }, " 返回主页 ", -1)])), t("div", _e, [t("div", $e, [e[30] || (e[30] = t("div", null, "设备类型：", -1)), t("div", null, [r(o(Se), { class: "elselect", modelValue: w.value, "onUpdate:modelValue": e[0] || (e[0] = s => w.value = s), placeholder: "请选择设备类型", "popper-append-to-body": !1, "popper-class": "custom-select-dropdown" }, { default: T(() => [(y(), D(Le, null, be(O, s => r(o(Ie), { class: "eloption", key: s.value, label: s.label, value: s.value }, null, 8, ["label", "value"])), 64))]), _: 1 }, 8, ["modelValue"])]), t("div", { class: "cz", onClick: Y }, "重置"), t("div", { class: "ss", onClick: H }, "搜索")]), t("div", Fe, [r(o(Ae), { data: B.value, class: "alarm-table" }, { default: T(() => [r(o(f), { prop: "id", label: "序号", width: "136", align: "center" }), r(o(f), { prop: "name", label: "设备名称", width: "136", align: "center" }), r(o(f), { prop: "status", label: "报警信息", width: "136", align: "center" }), r(o(f), { prop: "alarmLevel", label: "报警等级", width: "136", align: "center" }), r(o(f), { prop: "productTime", label: "产生时间", width: "136", align: "center" }), r(o(f), { prop: "endTime", label: "结束时间", width: "136", align: "center" }), r(o(f), { prop: "alarmDate", label: "报警日期", width: "136", align: "center" })]), _: 1 }, 8, ["data"]), t("div", ke, [r(o(Ne), { currentPage: c.value, "onUpdate:currentPage": e[1] || (e[1] = s => c.value = s), "page-size": L.value, "onUpdate:pageSize": e[2] || (e[2] = s => L.value = s), small: !0, layout: "total, prev, pager, next, jumper", total: U.value, onSizeChange: K, onCurrentChange: Z }, null, 8, ["currentPage", "page-size", "total"])])])]), r(o(F), { modelValue: I.value, "onUpdate:modelValue": e[5] || (e[5] = s => I.value = s), width: 293, "show-close": !1, modal: !0, "close-on-click-modal": !0, "close-on-press-escape": !0, class: "login-dialog", center: "", title: "", "append-to-body": !1, "lock-scroll": !1, onClose: ie }, { default: T(() => [t("div", We, [t("div", Be, [t("div", ze, [t("div", Ge, [t("img", { src: o(Pe), alt: "用户" }, null, 8, je)]), _(t("input", { "onUpdate:modelValue": e[3] || (e[3] = s => n.value.username = s), type: "text", placeholder: "请输入账号", class: "input-field" }, null, 512), [[$, n.value.username]])]), t("div", He, [t("div", Ye, [t("img", { src: o(Re), alt: "密码" }, null, 8, Ke)]), _(t("input", { "onUpdate:modelValue": e[4] || (e[4] = s => n.value.password = s), type: "password", placeholder: "请输入密码", class: "input-field" }, null, 512), [[$, n.value.password]])])]), t("div", { class: "button-section", onClick: ne }, " 确定 ")])]), _: 1 }, 8, ["modelValue"]), r(o(F), { modelValue: E.value, "onUpdate:modelValue": e[25] || (e[25] = s => E.value = s), width: "401px", "show-close": !1, class: "settings-dialog", onClose: ue }, { default: T(() => [t("div", Ze, [t("div", Je, [r(o(Ve), { model: a.value, class: "settings-form" }, { default: T(() => [t("div", Qe, [e[31] || (e[31] = t("label", { class: "form-label" }, "站号:", -1)), r(o(d), { modelValue: a.value.stationNumber, "onUpdate:modelValue": e[6] || (e[6] = s => a.value.stationNumber = s), placeholder: "请输入站号", class: "form-input", onInput: e[7] || (e[7] = s => v("stationNumber", s)) }, null, 8, ["modelValue"])]), t("div", Xe, [e[32] || (e[32] = t("label", { class: "form-label" }, "设备编号:", -1)), r(o(d), { modelValue: a.value.name, "onUpdate:modelValue": e[8] || (e[8] = s => a.value.name = s), placeholder: "请输入设备编号", class: "form-input", onInput: e[9] || (e[9] = s => x("name", s)) }, null, 8, ["modelValue"]), e[33] || (e[33] = t("span", { class: "form-unit" }, null, -1))]), t("div", el, [e[34] || (e[34] = t("label", { class: "form-label" }, "寄存器地址:", -1)), r(o(d), { modelValue: a.value.registerAddress, "onUpdate:modelValue": e[10] || (e[10] = s => a.value.registerAddress = s), placeholder: "请输入寄存器地址", class: "form-input", onInput: v }, null, 8, ["modelValue"])]), t("div", ll, [e[35] || (e[35] = t("label", { class: "form-label" }, "水压监测阈值:", -1)), r(o(d), { modelValue: a.value.waterPressureThreshold, "onUpdate:modelValue": e[11] || (e[11] = s => a.value.waterPressureThreshold = s), placeholder: "请输入水压监测阈值", class: "form-input", onInput: e[12] || (e[12] = s => v("waterPressureThreshold", s)) }, null, 8, ["modelValue"]), e[36] || (e[36] = t("span", { class: "form-unit" }, "Mpa", -1))]), e[50] || (e[50] = t("div", { class: "form-item" }, [t("label", { class: "form-label" }, "泡沫灭火剂监测阈值:")], -1)), t("div", sl, [e[37] || (e[37] = t("label", { class: "form-label" }, "高液位:", -1)), r(o(d), { modelValue: a.value.highLiquidLevelThreshold, "onUpdate:modelValue": e[13] || (e[13] = s => a.value.highLiquidLevelThreshold = s), placeholder: "请输入高液位阈值", class: "form-input", onInput: e[14] || (e[14] = s => v("highLiquidLevelThreshold", s)) }, null, 8, ["modelValue"]), e[38] || (e[38] = t("span", { class: "form-unit" }, "L", -1))]), t("div", tl, [e[39] || (e[39] = t("label", { class: "form-label" }, "中液位:", -1)), r(o(d), { modelValue: a.value.midLiquidLevelThreshold, "onUpdate:modelValue": e[15] || (e[15] = s => a.value.midLiquidLevelThreshold = s), placeholder: "请输入中液位阈值", class: "form-input", onInput: e[16] || (e[16] = s => v("midLiquidLevelThreshold", s)) }, null, 8, ["modelValue"]), e[40] || (e[40] = t("span", { class: "form-unit" }, "L", -1))]), t("div", al, [e[41] || (e[41] = t("label", { class: "form-label" }, "低液位:", -1)), r(o(d), { modelValue: a.value.lowLiquidLevelThreshold, "onUpdate:modelValue": e[17] || (e[17] = s => a.value.lowLiquidLevelThreshold = s), placeholder: "请输入低液位阈值", class: "form-input", onInput: e[18] || (e[18] = s => v("lowLiquidLevelThreshold", s)) }, null, 8, ["modelValue"]), e[42] || (e[42] = t("span", { class: "form-unit" }, "L", -1))]), t("div", ol, [e[43] || (e[43] = t("label", { class: "form-label" }, "预警时间阈值:", -1)), r(o(d), { modelValue: a.value.warningTimeThreshold, "onUpdate:modelValue": e[19] || (e[19] = s => a.value.warningTimeThreshold = s), placeholder: "请输入预警时间阈值", class: "form-input", onInput: e[20] || (e[20] = s => v("warningTimeThreshold", s)) }, null, 8, ["modelValue"]), e[44] || (e[44] = t("span", { class: "form-unit" }, "min", -1))]), t("div", rl, [e[45] || (e[45] = t("label", { class: "form-label" }, "采集数据时间:", -1)), r(o(d), { modelValue: a.value.time, "onUpdate:modelValue": e[21] || (e[21] = s => a.value.time = s), placeholder: "请输入采集数据时间", class: "form-input", onInput: e[22] || (e[22] = s => v("time", s)) }, null, 8, ["modelValue"]), e[46] || (e[46] = t("span", { class: "form-unit" }, "s", -1))]), t("div", nl, [e[48] || (e[48] = t("label", { class: "form-label" }, "上传图片:", -1)), t("div", il, [r(o(Ue), { class: "upload-demo", action: "/fire-monitor/api/upload/image", "show-file-list": !1, "before-upload": de, "on-success": me, "on-error": ve, accept: "image/*", name: "file" }, { default: T(() => [a.value.uploadedImageUrl ? (y(), D("div", dl, [t("img", { src: a.value.uploadedImageUrl, alt: "上传的图片" }, null, 8, ml), e[47] || (e[47] = t("div", { class: "image-overlay" }, [t("span", null, "重新上传")], -1))])) : (y(), D("div", ul, " 选择图片 "))]), _: 1 })])]), t("div", vl, [e[49] || (e[49] = t("label", { class: "form-label" }, "设备名称:", -1)), r(o(d), { modelValue: a.value.deviceName, "onUpdate:modelValue": e[23] || (e[23] = s => a.value.deviceName = s), placeholder: "请输入设备名称", class: "form-input", onInput: e[24] || (e[24] = s => x("deviceName", s)) }, null, 8, ["modelValue"])]), e[51] || (e[51] = t("div", { class: "form-item tishi" }, " 该设备对应的是主页水压检测设备下空余位置的设别设置，若调整名称，请注意该设备的状态是否和“灭火站的状态一致，若不一致请调整 ", -1))]), _: 1, __: [50, 51] }, 8, ["model"])]), t("div", { class: "settings-footer" }, [t("div", { class: "confirm-btn", onClick: ae }, " 完成 ")])])]), _: 1 }, 8, ["modelValue"])])) } }, fl = Ee(pl, [["__scopeId", "data-v-dc0d6fff"]]); export { fl as default };
