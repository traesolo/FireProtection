name: Build Linux ARM64 App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux-arm64:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libasound2-dev libgtk-3-dev libxss1 libgconf-2-4 libxtst6 libxrandr2 libasound2-dev libpangocairo-1.0-0 libatk1.0-dev libcairo-gobject2 libgtk-3-dev libgdk-pixbuf2.0-dev
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup FFmpeg binaries
      run: |
        npm run setup:ffmpeg
        # 确保ARM64 FFmpeg二进制文件存在
        if [ ! -d "ffmpeg/ffmpeg-7.0.2-arm64-static" ]; then
          echo "Warning: ARM64 FFmpeg binary not found, build may fail"
        fi
    
    - name: Build Linux ARM64 app
      run: npm run electron:build:linux -- --arm64
      env:
        # Force ARM64 build
        npm_config_target_arch: arm64
        npm_config_target_platform: linux
        npm_config_arch: arm64
        npm_config_cache: /tmp/.npm
        npm_config_build_from_source: true
        ELECTRON_CACHE: /tmp/.electron
        ELECTRON_BUILDER_CACHE: /tmp/.electron-builder
    
    - name: Upload ARM64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64-app-${{ github.sha }}
        path: |
          dist-electron/*arm64*.tar.gz
        retention-days: 30
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist-electron/*arm64*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}