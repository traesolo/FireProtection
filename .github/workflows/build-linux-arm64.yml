name: Build Linux ARM64 App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux-arm64:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libasound2-dev libgtk-3-dev libxss1 libgconf-2-4 libxtst6 libxrandr2 libasound2-dev libpangocairo-1.0-0 libatk1.0-dev libcairo-gobject2 libgtk-3-dev libgdk-pixbuf2.0-dev
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup FFmpeg binaries
      run: |
        npm run setup:ffmpeg
        # 检查ARM64版本是否存在
        if [ ! -d "ffmpeg/ffmpeg-7.0.2-arm64-static" ]; then
          echo "警告: ARM64版本的FFmpeg不存在，尝试下载..."
          
          # 创建ffmpeg目录（如果不存在）
          mkdir -p ffmpeg
          
          # 尝试下载Linux ARM64版本的FFmpeg
          echo "正在下载FFmpeg ARM64静态版本..."
          cd ffmpeg
          
          # 下载并解压FFmpeg ARM64版本
          wget -q https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-arm64-static.tar.xz -O ffmpeg-arm64.tar.xz || {
            echo "下载失败，尝试备用下载地址..."
            wget -q https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz -O ffmpeg-arm64.tar.xz || {
              echo "所有下载尝试都失败了"
              echo "将使用AMD64版本作为fallback（可能在某些环境下工作）"
              
              # 如果ARM64下载失败，至少确保有AMD64版本
              if [ ! -d "ffmpeg-7.0.2-amd64-static" ]; then
                wget -q https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz -O ffmpeg-amd64.tar.xz
                tar -xf ffmpeg-amd64.tar.xz
                mv ffmpeg-*-amd64-static ffmpeg-7.0.2-amd64-static 2>/dev/null || echo "AMD64版本重命名失败"
                rm -f ffmpeg-amd64.tar.xz
              fi
              
              cd ..
              ls -la ffmpeg/ || echo "ffmpeg目录列表失败"
              exit 0
            }
          }
          
          # 解压并重命名
          tar -xf ffmpeg-arm64.tar.xz
          mv ffmpeg-*-arm64-static ffmpeg-7.0.2-arm64-static 2>/dev/null || {
            # 如果重命名失败，尝试找到解压出来的目录
            EXTRACTED_DIR=$(find . -maxdepth 1 -type d -name "ffmpeg-*" | head -1)
            if [ -n "$EXTRACTED_DIR" ]; then
              mv "$EXTRACTED_DIR" ffmpeg-7.0.2-arm64-static
              echo "FFmpeg ARM64版本已重命名为: ffmpeg-7.0.2-arm64-static"
            else
              echo "无法找到解压的FFmpeg目录"
            fi
          }
          
          # 清理下载文件
          rm -f ffmpeg-arm64.tar.xz
          
          cd ..
        fi
        
        echo "FFmpeg目录内容:"
        ls -la ffmpeg/ || echo "无法列出ffmpeg目录"
        
        # 检查最终结果
        if [ -d "ffmpeg/ffmpeg-7.0.2-arm64-static" ]; then
          echo "✓ ARM64版本FFmpeg已准备就绪"
          ls -la ffmpeg/ffmpeg-7.0.2-arm64-static/
        elif [ -d "ffmpeg/ffmpeg-7.0.2-amd64-static" ]; then
          echo "⚠ 使用AMD64版本FFmpeg作为fallback"
          ls -la ffmpeg/ffmpeg-7.0.2-amd64-static/
        else
          echo "❌ 没有可用的FFmpeg版本"
          echo "构建将依赖系统FFmpeg或运行时错误处理"
        fi
    
    - name: Build Linux ARM64 app
      run: npm run electron:build:linux -- --arm64
      env:
        # Force ARM64 build
        npm_config_target_arch: arm64
        npm_config_target_platform: linux
        npm_config_arch: arm64
        npm_config_cache: /tmp/.npm
        npm_config_build_from_source: true
        ELECTRON_CACHE: /tmp/.electron
        ELECTRON_BUILDER_CACHE: /tmp/.electron-builder
    
    - name: Upload ARM64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64-app-${{ github.sha }}
        path: |
          dist-electron/*arm64*.tar.gz
        retention-days: 30
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist-electron/*arm64*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}